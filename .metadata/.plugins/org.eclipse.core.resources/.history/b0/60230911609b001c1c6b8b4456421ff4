package sws.model;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;


public class StoreProdus {
	public static void main(String[] args) {

		  try {

		   // 6. Create a FileOutputStream Object by passing text file
		   // name which will be used to store the object state

		   FileOutputStream fos = new FileOutputStream("produse.txt");

		   // 7. Create a ObjectOutputStream object which wraps 
		   // object of FileOutputStream thus helping to pass object 
		   // to a text file.
		   ObjectOutputStream oos = new ObjectOutputStream(fos);

		   // 8. Create a User object by passing the dummy values to 
		   // its constructor
		   produs produs = new produs("Pieptan", "Par", "290 lei");

		   // 9. Calling the writeObject method present in the ObjectOutputStream
		   // which will save the object state into the text file created above
		   oos.writeObject(produs);


		   // 10. Flushing and closing the ObjectOutputStream
		   // as they are very critical resource
		   oos.flush();
		   oos.close();

		   // 11. Assigning the user object to null so that its actual
		   // object goes into unreachable state in heap ... similar to 
		   // destruction of object in this case
		   produs = null;

		   // 12. Create a FileInputStream Object by passing text file
		   // name which will be used to read the state of the object 

		   FileInputStream fis = new FileInputStream("produs.txt");

		   // 13. Create a ObjectInputStream object which wraps 
		   // object of FileInputStream thus helping to pass object 
		   // state from text file to Object

		   ObjectInputStream ois = new ObjectInputStream(fis);

		   // 14. In order to read the User object we will use the 
		   // ObjectInputStream.readObject() method. After this method gets 
		   // executed it reads object state from text file and return a object
		   // of type Object so we need to cast it back the its origin class, 
		   // the User class.
		   produs = (produs) ois.readObject();

		   // 15. After getting back the required object back, in order to prove
		   // the result we outputs its state to console.
		   System.out.println("Nume : " + produs.getName());
		   System.out.println("Category : " + produs.getCategory());
		   System.out.println("Price : " + produs.getPrice());

		   // closing the critical resources
		   ois.close();
		  } catch (IOException e) {
		   e.printStackTrace();
		  } catch (ClassNotFoundException e) {
		   e.printStackTrace();
		  }
		 }
}
